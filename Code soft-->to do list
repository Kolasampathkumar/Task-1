def load_tasks(filename):
    try:
        with open(filename, 'r') as file:
            return [line.strip() for line in file.readlines()]
    except FileNotFoundError:
        return []

def save_tasks(filename, tasks):
    try:
        with open(filename, 'w') as file:
            for task in tasks:
                file.write(task + '\n')
    except IOError:
        print("Error: Unable to save tasks.")

def display_tasks(tasks):
    if not tasks:
        print("No tasks found.")
    else:
        print("Your tasks:")
        for i, task in enumerate(tasks, start=1):
            print(f"{i}. {task}")
def add_task(tasks, new_task):
    tasks.append(new_task)
    print(f"Added: {new_task}")

def update_task(tasks, task_index, updated_task):
    if 1 <= task_index <= len(tasks):
        tasks[task_index - 1] = updated_task
        print(f"Updated task {task_index}: {updated_task}")
    else:
        print("Invalid task index. Task not updated.")

def main():
    filename = "tasks.txt"
    tasks = load_tasks(filename)

    while True:
        print("\nOptions:")
        print("1. Show tasks")
        print("2. Add task")
        print("3. Update task")
        print("4. Quit")
        choice = input("Enter your choice: ")

        if choice == '1':
            display_tasks(tasks)
        elif choice == '2':
            new_task = input("Enter a new task: ")
            add_task(tasks, new_task)
        elif choice == '3':
            try:
                task_index = int(input("Enter the task index to update: "))
                if 1 <= task_index <= len(tasks):
                    updated_task = input("Enter the updated task: ")
                    update_task(tasks, task_index, updated_task)
                else:
                    print("Invalid task index.")
            except ValueError:
                print("Invalid input for task index.")
        elif choice == '4':
            save_tasks(filename, tasks)
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
    
